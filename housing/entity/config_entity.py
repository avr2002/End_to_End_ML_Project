from collections import namedtuple

DataIngestionConfig = namedtuple("DataIngestionConfig",
                            ["dataset_download_url","tgz_download_dir","raw_data_dir","ingested_train_dir","ingested_test_dir"])

# DataIngestionConfig has dataset_url_link, compressed_file_path, unCompressed_file_path, and train_test_splitted_file_path respectively

DataValidationConfig = namedtuple("DataValidationConfig", ["schema_file_path"])

# DataValidationConfig has schema_file_path which validates the file_name, num of columns, datatypes of each column, etc. 

DataTranformationConfig = namedtuple("DataTranformationConfig",["add_bedroom_per_room",
                                                                "transformed_train_dir",
                                                                "transformed_test_dir",
                                                                "preprocessed_object_file_path"])

# DataTranformationConfig contains a new column add_bedroom_per_room, path_of_transformend_train_dataset, path_for_tranformed_test_dataset, and pickle_file_path_for_feature_engeneering
# The pickle file created for feature engeneering will automatically apply all the feature engeneering on test dataset which was applied on test datset

ModelTrainerConfig = namedtuple("ModelTrainerConfig",["trained_model_file_path","base_accuracy"])

# ModelTrainerConfig has pickle_file_path_of_trained_model and a base_accuracy which is, if my model has lower accuracy than this then it'll not be allowed for pickling

ModelEvaluationConfig = namedtuple("ModelEvaluationConfig", ["model_evaluation_file_path", "time_stamp"])

# ModelEvaluationConfig has model_evaluation_file_path which has the info. about the current best model running in production, with which
# we'll compare our newly trained model in Model Evaluation Step.
# And time_stamp is just to record the time at which model comparison was done.

ModelPusherConfig = namedtuple("ModelPusherConfig", ["export_dir_path"])

# ModelPusherConfig contains the path of the trained model which is ready for further use.

TrainingPipelineConfig = namedtuple("TrainingPipelineConfig", ["artifact_dir"])

# TrainingPipelineConfig contains the artifact path i.e. all the outputs generated by our pipeline will be saved in artifact_dir